/*
        4. 数组作为函数传递:
    
    1. 一维数组:
        传递一维数组只需 将数组名以指针的方式传递: *a or a[]
    2. 二维数组:
        传递二维数组时 需要提供其中一维的大小: a[][1001]
*/
#include <iostream>
using namespace std;

// 1.一维数组:
void test01(int *a) // 也可以写: a[]  // 地址传递
{
    cout << "befor:  " << a[0] << endl; // 1
    a[0] = 200;
    
}
// ----------------------------------------------------------------------------------------------------------------------------------------------

// 2. 二维数组:
// 2.1 第一种:
void test02(int a[][1001])
{
    cout << a[0][0];
}

// 2.2 第二种:
void test02(int **a, int n, int m)
{
    for(int i = 0; i < n; i++)
    {
        a[i] = new int[m];
        for(int j = 0; j < m; j++)
        {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
}
int main()
{
    // 1.一维数组:
    int a[5] = {1, 2, 3, 4, 5};
    test01(a);
    cout << "after: " <<a[0] <<  endl;  // 200
    
// --------------------------------------------------------------------------------------------------------------------------------

    // 2. 二维数组:
    // 2.1 第一种方式: 
    int b[3][1001] = 
    {
        1, 2, 3,
        4, 5, 6,
        7, 8, 9,
    };
    test02(b);

    // 2.2 第二种方式:
    int **arr;
    int n = 5;
    int m = 3;
    
    for(int i = 0; i < n; i++)
    {
        arr[i] = new int[m];
        for(int j = 0; j < m; j++)
        {
            arr[i][j] = 1;
        }
    }
    test02(arr, n, m);
    
    return 0;
}
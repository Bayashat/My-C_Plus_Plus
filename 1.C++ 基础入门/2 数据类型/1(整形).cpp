/*
C++在创建一个变量或者常量时，必须要制定出相应的数据类型，否则无法给变量分配内存
数据类型存在意义:  给变量分配合适的内存空间

            1.整型
 整型变量表示的是整数类型的数据

语法:   数据类型  变量名 = 变量初始值;
        int a = 10;     // 声明并初始化
*/
#include <iostream>
using namespace std; 

C++中能够表示整型的类型有以下几种方式，区别在与所占内存空间不同

    整型    int  ----4 byte = 32 bit ---" -2^31 ~ 2^31-1 "  取值范围是：-32768~32767 
    短整型   short----2 byet = 16 bit ---" -2^15 ~ 2^15 "  取值范围是：-32768~32767
    长整型    long ----windows(4 byet) Linux（ 32（4）64（8））--- "-2^31 ~ 2^31-1"  取值范围是：-32768~32767
    长长整型    long long--8 byte = 32 bit ----" -2^63 ~ 2^63-1" 


int main()
{
 // 1. char 型数字 转换 整形数字:
    char c = '5';
    int x = int(c - 48); // 5

    // 2. 整形数字转 char型数字:
    int x = 56;
    string s = "";
    while(x != 0)
    {
        s = char(x%10 + 48) + s;
        x /= 10;
    }
    cout << s;  // 56

    return 0;
}
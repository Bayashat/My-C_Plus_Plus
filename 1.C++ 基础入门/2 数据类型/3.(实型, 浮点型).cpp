/*          3. 实型（浮点型）

作用:用于表示小数

浮点型分为两种：
  单精度  Float
  双精度  Double

  两者的区别在于表示的有效数字范围不同。
   Float      4 字节      7位有效数字
   double     8 字节      15-16位有效数字

目录:
 1. 怎么样让小数显示 多位?
 2. 怎么样让两个整数相除,结果为 小数
 3. 统计 float 和 double 占用内存空间
 4. 科学计数法
 
*/
#include <iostream>
#include <cmath>
#include <iomanip>  // 控制符头文件
using namespace std;

int main()
{
///// 11111. 怎么样让小数显示 多位?
    
    float f1 = 3.1415926f;  // 不写f的话它会以为是double型

    // 1.默认情况下，输入一个小数，会显示6位有效数字
    cout << "f1 = " << f1 << endl;  // 3.14159

    double d1 = 3.1415926;
    cout << "d1 = " << d1 << endl;  // 3.14159

    // 2.1 控制 cout 的显示精度 - 使用Printf:

    double p = 22/7.0;
    cout << p << endl; // 3.14286
    
    printf("%.6f",p); // 3.142857
    printf("%.10f",p);  // 3.1428571429

    // 2.2 控制 cout 的显示精度 - 用 fixed + setprecision(x)

    // 1) 强制以小数显示:
    cout << fixed ; // 让浮点型固定以数字的方式显示. 若不写这个, 结果会以科学计数法显示:  3.3333e+007
    double num = 100.0 / 3.0;
    cout << num * 1000000 << endl;  // 33333333.333333

    // 2) 控制显示的精度:
    cout << setprecision(2);    // 小数点后只显示2位小数  or cout.precision(2)
    double num = 100.0 / 3.0;
    cout << num * 1000000 << endl;  // 33333333.33  

    // 3) 既要以小数，还要控制显示精度的话, 上面2个可组合使用:
    cout << fixed << setprecision(2);

//*********************************************************************************************************************************************
///// 22222. 怎么样让两个整数相除,结果为 小数:
    int a = 5;
    int b = 2;
    double num = a / b;
    cout << num ;  // 2  : 为什么不是 2.5 呢, 因为 整型与整型相除的话结果是整形.

    // 解决方法1是 强制转换其中之一为 浮点型:
    double num = (double)a / b;
    cout << num; // 2.5

    // 解决方法2是 将其中之一乘以 1.0:
    double num = a * 1.0 / b;
    cout << num ;  // 2 .5

//*******************************************************************************************************************************************

///// 33333: 统计 float 和 double 占用内存空间:
    cout << sizeof(f1) << endl; // 4
    cout << sizeof(d1) << endl; // 8

//************************************************************************************************************************************************

///// 44444: 科学计数法

    float f1 = 3e2;   // 3* 10^2
    cout << "f1= " << f1 << endl;   // 300

    float f2 = 3e-2;  // 3* 10^-2
    cout << "f2= " << f2 << endl;   // 0.03

    return 0;
}
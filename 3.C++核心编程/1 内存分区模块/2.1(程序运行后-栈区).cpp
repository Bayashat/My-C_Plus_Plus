/*          2.1 程序运行后 - 栈区

 1. 栈区:
    * 由编译器自动分配释放, 存放函数的参数值,局部变量等
    * 注意事项: 不要返回局部变量的地址，栈区开辟的数据由编译器自动释放

*/
#include <iostream>
using namespace std;

int *func() // 形参也会存放在栈区.
{
    int a = 10; // 局部变量,存放在栈区. 栈区的数据在函数执行完后自动释放(销毁)
    return &a;  
}   // 如果的确想要返回局部变量的地址，就在局部变量前加上static使之成为静态变量，让其放在全局区（程序结束后才释放）

int main()
{
    // 接受func函数的返回值:
    int *p = func();

    cout << *p << endl; // 10: 第一次可以打印正确的数字,是因为编译器做了保留.
    cout << *p << endl; // 267955168: 第二次这个数据就不再保留了,因为栈区的数据会自动释放.
    
    system("pause");
    return 0;
}